name: SECURESNAP CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    name: Lint, Install & Security Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with Ruff
        run: |
          pip install ruff
          ruff check . --show-source

      - name: Run safety check
        timeout-minutes: 5
        run: |
          pip install safety
          safety check --full-report || echo "Vulnerabilities found (check logs)"

      - name: Run unit tests
        run: |
          pip install pytest pytest-cov
          pytest --cov=./ --cov-report=xml

  docker-build:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'  # Only run on main branch pushes

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/securesnap:latest
            ${{ secrets.DOCKER_USERNAME }}/securesnap:${{ github.sha }}
          labels: |
            org.opencontainers.image.source=${{ github.repository_url }}

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run ZAP scan
        uses: zaproxy/action-full-scan@v0.8.0
        with:
          target: http://localhost:8000/docs
          cmd_options: -m 5 -T 600 -j
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: ghcr.io/zaproxy/zaproxy:stable
          artifact_name: zap_scan_report
